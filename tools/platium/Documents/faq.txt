
■FAQ
Q : フラグなどを指定出来ますか？
A : フラグ専用の機能はありませんがレイヤーを使う事で柔軟に表現出来ます。
	フラグ専用のレイヤーを作成して各パーツにどのようなフラグを割り当てるかを決め、
	未使用フラグ用として他のレイヤーで使用していないパーツを透明パーツに指定します。
	プログラム側でフラグレイヤーを参照しながらフラグの判定を行います。
	複数のレイヤーをフラグレイヤーとして使う事で1パーツに複数のフラグを指定する事も出来ます。


Q : ゲームイベントなどのデータを埋め込めますか？
A : イベントデータ自体を埋め込む事は出来ませんしマップデータに直接埋め込めなくても問題ありません。
	マップデータへはイベントの番号(パーツの配置)を埋め込みプログラム側でその番号を手掛かりに、
	外部データ(例えばテキストファイル)を参照するようにします。


Q : レイヤーを多く重ねると動作が重いのですが？
A : レイヤー分の描画を行うわけですから当然重くなります。ですが動作を軽くするアイデアがいくつかあります。

	1. 透明パーツを設定する。
	複数のレイヤーを使用している場合で下層レイヤーのパーツが上層に位置するレイヤーのパーツによって完全に隠されてしまう場所や、上層レイヤーで何も存在しない場所には透明パーツで埋めるようにします。
	要するに見えない空間には透明パーツを配置すると言う事です。
	透明パーツは一切の描画が行われませんがそれ以外のパーツは如何なる場合でも(パーツ全体が透過色であっても)確実に'描画処理'が行われるため描画に多くのコストが掛かります。
	また、あなたの作成しているゲームプログラム内でも透明パーツの場合はそのパーツの描画をスキップする事で描画コストを大幅に抑えることが出来ます。

	2. オーバービューウィンドウを非表示/又は閉じる。
	マップのプレビューには少なからずとも多少の描画処理が必要です。非表示にする事でプレビュー処理が省かれレスポンスが向上します。

	3. 縮小表示を避ける
	縮小表示時には通常より多くのパーツを処理するためより多くの描画コストが発生します。


Q : パーツに割り当てられている番号の規則は？
A : マップの形式により２種類あります。

	8bitの場合...
	最左上のパーツが0番。右に向かって1番, 2番...15番まで並び、
	次の列の左から16番, 17番...31番。最右下が255番というように16x16のマスに左上から右下に向かって順番に割り当てられています。

	16bitの場合...
	最左上のパーツが0番。右に向かって1番, 2番...255番まで並び、
	次の列の左から256番, 257番...511番。最右下が65535番というように256x256のマスに左上から右下に向かって順番に割り当てられています。
